[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chroma-ollama"
version = "0.1.0"
description = "Chroma + Ollama 向量库项目"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["chroma", "ollama", "vector", "search", "kafka", "obs"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "chromadb>=0.5.0,<1.0.0",
    "ollama>=0.3.0,<1.0.0",
    "orjson>=3.9.15,<4.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    "tqdm>=4.66.4,<5.0.0",
    "kafka-python>=2.0.2,<3.0.0",
    "esdk-obs-python>=3.22.3,<4.0.0",
    "confluent-kafka>=2.6.0,<3.0.0",
    "polars>=0.20.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "structlog>=23.0.0,<24.0.0",
    "tenacity>=8.0.0,<9.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    "ruff>=0.1.0,<1.0.0",
]

[project.scripts]
chroma-ingest = "chroma_ollama.ingest:main"
chroma-search = "chroma_ollama.search:main"
obs-worker = "chroma_ollama.worker:main"
obs-pool-worker = "chroma_ollama.pool_worker:main"
obs-task-generator = "chroma_ollama.task_generator:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["chroma_ollama*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["chroma_ollama"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
